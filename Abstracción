1. Abstracción
Concepto: Ocultar los detalles internos y mostrar solo la funcionalidad relevante.

Ejemplo: Imagina una clase Coche. Cuando usas coche.arrancar(), no te importa cómo funciona el motor internamente.

Python

# Abstraccion/coche.py
class Coche:
    def __init__(self, marca, modelo):
        self.marca = marca
        self.modelo = modelo

    def arrancar(self):
        # Aquí se abstraen los detalles complejos del arranque del motor
        self._comprobar_bateria()
        self._iniciar_motor()
        print(f"El {self.marca} {self.modelo} ha arrancado.")

    def _comprobar_bateria(self):
        # Método "privado" que representa una operación interna
        print("Comprobando batería...")

    def _iniciar_motor(self):
        # Método "privado" que representa otra operación interna
        print("Iniciando motor...")

# Uso:
mi_coche = Coche("Toyota", "Corolla")
mi_coche.arrancar() # Solo necesitamos saber cómo arrancar, no los detalles internos.
